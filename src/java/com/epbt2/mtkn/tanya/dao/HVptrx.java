package com.epbt2.mtkn.tanya.dao;


import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * HVptrx Value Object.
  * This class is value object representing database table MTKN.HVPTRX
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class HVptrx implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private String STbil;
    private String KDrjk;
    private String TAhun;
    private String AMjan;
    private String AMfeb;
    private String AMmar;
    private String AMapr;
    private String AMmay;
    private String AMjun;
    private String AMjul;
    private String AMaug;
    private String AMsep;
    private String AMoct;
    private String AMnov;
    private String AMdec;
    private String AMjum;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public HVptrx () {

    }

    public HVptrx (String STbilIn) {

          this.STbil = STbilIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public String getSTbil() {
          return this.STbil;
    }
    public void setSTbil(String STbilIn) {
          this.STbil = STbilIn;
    }

    public String getKDrjk() {
          return this.KDrjk;
    }
    public void setKDrjk(String KDrjkIn) {
          this.KDrjk = KDrjkIn;
    }

    public String getTAhun() {
          return this.TAhun;
    }
    public void setTAhun(String TAhunIn) {
          this.TAhun = TAhunIn;
    }

    public String getAMjan() {
          return this.AMjan;
    }
    public void setAMjan(String AMjanIn) {
          this.AMjan = AMjanIn;
    }

    public String getAMfeb() {
          return this.AMfeb;
    }
    public void setAMfeb(String AMfebIn) {
          this.AMfeb = AMfebIn;
    }

    public String getAMmar() {
          return this.AMmar;
    }
    public void setAMmar(String AMmarIn) {
          this.AMmar = AMmarIn;
    }

    public String getAMapr() {
          return this.AMapr;
    }
    public void setAMapr(String AMaprIn) {
          this.AMapr = AMaprIn;
    }

    public String getAMmay() {
          return this.AMmay;
    }
    public void setAMmay(String AMmayIn) {
          this.AMmay = AMmayIn;
    }

    public String getAMjun() {
          return this.AMjun;
    }
    public void setAMjun(String AMjunIn) {
          this.AMjun = AMjunIn;
    }

    public String getAMjul() {
          return this.AMjul;
    }
    public void setAMjul(String AMjulIn) {
          this.AMjul = AMjulIn;
    }

    public String getAMaug() {
          return this.AMaug;
    }
    public void setAMaug(String AMaugIn) {
          this.AMaug = AMaugIn;
    }

    public String getAMsep() {
          return this.AMsep;
    }
    public void setAMsep(String AMsepIn) {
          this.AMsep = AMsepIn;
    }

    public String getAMoct() {
          return this.AMoct;
    }
    public void setAMoct(String AMoctIn) {
          this.AMoct = AMoctIn;
    }

    public String getAMnov() {
          return this.AMnov;
    }
    public void setAMnov(String AMnovIn) {
          this.AMnov = AMnovIn;
    }

    public String getAMdec() {
          return this.AMdec;
    }
    public void setAMdec(String AMdecIn) {
          this.AMdec = AMdecIn;
    }

    public String getAMjum() {
          return this.AMjum;
    }
    public void setAMjum(String AMjumIn) {
          this.AMjum = AMjumIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(String STbilIn,
          String KDrjkIn,
          String TAhunIn,
          String AMjanIn,
          String AMfebIn,
          String AMmarIn,
          String AMaprIn,
          String AMmayIn,
          String AMjunIn,
          String AMjulIn,
          String AMaugIn,
          String AMsepIn,
          String AMoctIn,
          String AMnovIn,
          String AMdecIn,
          String AMjumIn) {
          this.STbil = STbilIn;
          this.KDrjk = KDrjkIn;
          this.TAhun = TAhunIn;
          this.AMjan = AMjanIn;
          this.AMfeb = AMfebIn;
          this.AMmar = AMmarIn;
          this.AMapr = AMaprIn;
          this.AMmay = AMmayIn;
          this.AMjun = AMjunIn;
          this.AMjul = AMjulIn;
          this.AMaug = AMaugIn;
          this.AMsep = AMsepIn;
          this.AMoct = AMoctIn;
          this.AMnov = AMnovIn;
          this.AMdec = AMdecIn;
          this.AMjum = AMjumIn;
    }


    /** 
     * hasEqualMapping-method will compare two HVptrx instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(HVptrx valueObject) {

          if (this.STbil == null) {
                    if (valueObject.getSTbil() != null)
                           return(false);
          } else if (!this.STbil.equals(valueObject.getSTbil())) {
                    return(false);
          }
          if (this.KDrjk == null) {
                    if (valueObject.getKDrjk() != null)
                           return(false);
          } else if (!this.KDrjk.equals(valueObject.getKDrjk())) {
                    return(false);
          }
          if (this.TAhun == null) {
                    if (valueObject.getTAhun() != null)
                           return(false);
          } else if (!this.TAhun.equals(valueObject.getTAhun())) {
                    return(false);
          }
          if (this.AMjan == null) {
                    if (valueObject.getAMjan() != null)
                           return(false);
          } else if (!this.AMjan.equals(valueObject.getAMjan())) {
                    return(false);
          }
          if (this.AMfeb == null) {
                    if (valueObject.getAMfeb() != null)
                           return(false);
          } else if (!this.AMfeb.equals(valueObject.getAMfeb())) {
                    return(false);
          }
          if (this.AMmar == null) {
                    if (valueObject.getAMmar() != null)
                           return(false);
          } else if (!this.AMmar.equals(valueObject.getAMmar())) {
                    return(false);
          }
          if (this.AMapr == null) {
                    if (valueObject.getAMapr() != null)
                           return(false);
          } else if (!this.AMapr.equals(valueObject.getAMapr())) {
                    return(false);
          }
          if (this.AMmay == null) {
                    if (valueObject.getAMmay() != null)
                           return(false);
          } else if (!this.AMmay.equals(valueObject.getAMmay())) {
                    return(false);
          }
          if (this.AMjun == null) {
                    if (valueObject.getAMjun() != null)
                           return(false);
          } else if (!this.AMjun.equals(valueObject.getAMjun())) {
                    return(false);
          }
          if (this.AMjul == null) {
                    if (valueObject.getAMjul() != null)
                           return(false);
          } else if (!this.AMjul.equals(valueObject.getAMjul())) {
                    return(false);
          }
          if (this.AMaug == null) {
                    if (valueObject.getAMaug() != null)
                           return(false);
          } else if (!this.AMaug.equals(valueObject.getAMaug())) {
                    return(false);
          }
          if (this.AMsep == null) {
                    if (valueObject.getAMsep() != null)
                           return(false);
          } else if (!this.AMsep.equals(valueObject.getAMsep())) {
                    return(false);
          }
          if (this.AMoct == null) {
                    if (valueObject.getAMoct() != null)
                           return(false);
          } else if (!this.AMoct.equals(valueObject.getAMoct())) {
                    return(false);
          }
          if (this.AMnov == null) {
                    if (valueObject.getAMnov() != null)
                           return(false);
          } else if (!this.AMnov.equals(valueObject.getAMnov())) {
                    return(false);
          }
          if (this.AMdec == null) {
                    if (valueObject.getAMdec() != null)
                           return(false);
          } else if (!this.AMdec.equals(valueObject.getAMdec())) {
                    return(false);
          }
          if (this.AMjum == null) {
                    if (valueObject.getAMjum() != null)
                           return(false);
          } else if (!this.AMjum.equals(valueObject.getAMjum())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass HVptrx, mapping to table MTKN.HVPTRX\n");
        out.append("Persistent attributes: \n"); 
        out.append("STbil = " + this.STbil + "\n"); 
        out.append("KDrjk = " + this.KDrjk + "\n"); 
        out.append("TAhun = " + this.TAhun + "\n"); 
        out.append("AMjan = " + this.AMjan + "\n"); 
        out.append("AMfeb = " + this.AMfeb + "\n"); 
        out.append("AMmar = " + this.AMmar + "\n"); 
        out.append("AMapr = " + this.AMapr + "\n"); 
        out.append("AMmay = " + this.AMmay + "\n"); 
        out.append("AMjun = " + this.AMjun + "\n"); 
        out.append("AMjul = " + this.AMjul + "\n"); 
        out.append("AMaug = " + this.AMaug + "\n"); 
        out.append("AMsep = " + this.AMsep + "\n"); 
        out.append("AMoct = " + this.AMoct + "\n"); 
        out.append("AMnov = " + this.AMnov + "\n"); 
        out.append("AMdec = " + this.AMdec + "\n"); 
        out.append("AMjum = " + this.AMjum + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        HVptrx cloned = new HVptrx();

        if (this.STbil != null)
             cloned.setSTbil(new String(this.STbil)); 
        if (this.KDrjk != null)
             cloned.setKDrjk(new String(this.KDrjk)); 
        if (this.TAhun != null)
             cloned.setTAhun(new String(this.TAhun)); 
        if (this.AMjan != null)
             cloned.setAMjan(new String(this.AMjan)); 
        if (this.AMfeb != null)
             cloned.setAMfeb(new String(this.AMfeb)); 
        if (this.AMmar != null)
             cloned.setAMmar(new String(this.AMmar)); 
        if (this.AMapr != null)
             cloned.setAMapr(new String(this.AMapr)); 
        if (this.AMmay != null)
             cloned.setAMmay(new String(this.AMmay)); 
        if (this.AMjun != null)
             cloned.setAMjun(new String(this.AMjun)); 
        if (this.AMjul != null)
             cloned.setAMjul(new String(this.AMjul)); 
        if (this.AMaug != null)
             cloned.setAMaug(new String(this.AMaug)); 
        if (this.AMsep != null)
             cloned.setAMsep(new String(this.AMsep)); 
        if (this.AMoct != null)
             cloned.setAMoct(new String(this.AMoct)); 
        if (this.AMnov != null)
             cloned.setAMnov(new String(this.AMnov)); 
        if (this.AMdec != null)
             cloned.setAMdec(new String(this.AMdec)); 
        if (this.AMjum != null)
             cloned.setAMjum(new String(this.AMjum)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}